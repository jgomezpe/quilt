package com.example.jgomez.textedittest;

import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.text.method.ScrollingMovementMethod;

import java.io.InputStream;
import java.io.Serializable;
import quilt.QuiltMachine;
import quilt.Remnant;
import quilt.factory.QuiltMachineFactory;
import quilt.operation.CommandCall;
import quilt.util.Language;
import unalcol.gui.I18N.I18NManager;
import unalcol.gui.editor.ErrorManager;
import unalcol.gui.editor.Position;

public class MainActivity extends Activity {
	private QuiltMachine machine;
	private SyntaxEditText program_input, command_input;
	private Button run, compile;
	private Context context;
	private TextView logText;
	//	private static final String images="imgs/";
	private static final String i18n = "I18N/";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		context = this.getApplicationContext();

		program_input = new SyntaxEditText(findViewById(R.id.programInp));
		command_input = new SyntaxEditText(findViewById(R.id.commandInp));

		program_input.input().setMovementMethod(new ScrollingMovementMethod());

		run = (Button) findViewById(R.id.runBtn);

		run.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				String program = command_input.getText();
				CommandCall command = null;
				try {
					command = machine.command(program);
					command.setRow(-1);
				} catch (Exception e) {
					show_error_message(command_input, e);
				}
				if (command != null) {
					try {
						Remnant r = machine.execute(command);
						Intent myIntent = new Intent(context, NextScreen.class);
						myIntent.putExtra("remnant", r);
						startActivity(myIntent);
						if (logText.getText().toString().contains(ErrorManager.ERROR))
							logText.setText(machine.message(Language.NO_ERRORS));
					} catch (Exception e) {
						show_error_message(program_input, e);
					}
				}
			}
		});

		compile = (Button) findViewById(R.id.compileBtn);

		compile.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				try {
					machine.setProgram(program_input.getText());
					logText.setText(machine.language().get(Language.NO_ERRORS));
				} catch (Exception e) {
					show_error_message(program_input, e);
				}
			}
		});

		logText = (TextView) findViewById(R.id.logText);

		ErrorManager error_manager = new ErrorManager();
		try {
			String language = "spanish";
			String fileName = "/" + i18n + language + ".txt";
			InputStream in = ErrorManager.class.getResourceAsStream(fileName);
			error_manager = new ErrorManager(in);
		} catch (Exception e) {
			logText.setText(e.getMessage());
		}
		machine = QuiltMachineFactory.little2(error_manager);
		/* Set Text Watcher listener */
		QuiltSpanFactory span_factory = new QuiltSpanFactory();
		program_input.setTokenizer(machine.parser(), span_factory);
		command_input.setTokenizer(machine.parser(), span_factory);

	}

	public void show_error_message(SyntaxEditText code_area, Exception e) {
		String msg = e.getMessage();
		int k = msg.indexOf(I18NManager.MSG_SEPARATOR);
		Position pos = new Position(msg.substring(0, k));
		if (pos.row() == -1) {
			code_area = command_input;
			pos.setRow(0);
		}
		code_area.locate(pos.row(), pos.column());
		logText.setText(msg.substring(k + 1));
		Toast tmsg = Toast.makeText(getBaseContext(), machine.message(Language.ERRORS),
				Toast.LENGTH_LONG);
		tmsg.show();
	}

}
