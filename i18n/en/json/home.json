{ 
	"info":"<p>Quilt is a simple but powerful programming language (of the FunPL family) developed by professor Jonatan GÃ³mez, Universidad Nacional de Colombia - South America, for teaching to think algorithmic solutions instead of teaching to code. In quilts you have a set of remnants and two basic operations (rotate 90 degrees clockwise and vertically paste two quilts of the same height) that can be used to define (in the programming area) new commands. With those new compiled commands, it is hoped that the quilts that the programmer's imagination defines can be built (running those in the command area).</p> <p> Also, Quilts teaches math, logic, and programming concepts without the classical nomenclature, which facilitates their adquisition.",
	"coder":"% A quilt program\n% A three remnants quilt [corner,line,\n% three times rotated corner]\nb = <- | @(@(@(<)))\n% Rotate quilt 180 degrees clockwise\n% (two 90 degrees rotations)\nrot2(X) = @(@(X))\n% The b quilt rotated 90 degrees clockwise\nleft = @(b)\n% The left quilt rotated 180 degrees\nright = rot2(left)\n% Quilt height 3 with a line, space, and line\ncen = @(@(-) | : | @(-))\n% A 3x3 quilt with a square\nsquare = left | cen | right\n% Replace first remnant, must be a corner remnant,\n% with a diagonal\nchange1(< | X) = @(/) | X\n% Replace the last remnant, must be a corner \n% rotated 270 degrees (rotated 3 times) \n% with a three times rotated diagonal remnant\nchange2(X|@(@(@(<)))) = X | /\n% A 3x3 quilt with a house\nhouse = @(change1(b)) | cen | @(rot2(change2(b)))\n% A quilt with a square and a house\ntotal = square | house",
	"command":"% Runs command total\ntotal"
}