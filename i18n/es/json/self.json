{ 
	"info":"<p>Los comandos pueden tomar cualquier número de argumentos y pueden ser definidos mediante casos. El motor semántico del lenguaje de Colchas considera cada posible caso (primero definido, primero considerado), y aplica, de ser posible, el caso apropiado.</p>",
	"coder":"r2(X) = @(@(X)) % Dos rotaciones (rotación de 180º)\nr3(X) = @(r2(X)) % Tres rotaciones (rotación de 270º)\nreduce(-- | X) = + | X % Si la colcha comienza con dos -, reemplaza ambos con un solo +\nreduce(-+ | X) = - | X %Si la colcha comienza con -+, reemplaza ambas con un solo -\nreduce(+| X) = X % Si la colcha comienza con un +, remueve este\nreduce(--) = + % Si la colcha son solo dos -, retorna un retazo +\nreduce(-+) = - % Si la colcha es solo -+ , retorna el retazo -\ntodo(X) = todo(reduce(X)) % Aplica el comando reduce tantas veces como sea posible\ntodo(X) = X % Caso por defecto, si el comando reduce falla, deja la colcha tal como llega (hace nada)\nrara(X | Y) = raro(X) | @(Y) %Ayuda: Y toma el último retazo de la colcha mientras que X toma el resto de la misma\nraro(X) = @(X) %Ayuda: en este caso, X es solamente un retazo. ¿Qué hace el comando raro?\n",
	"command":"% Dibuja la colcha ++-+-\n++-+-"
}